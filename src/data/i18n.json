{
  "en": {
    "code": "en",
    "bcp47": "en",
    "nativeName": "English",
    "loc": {
      "title": "Weird Flex: Flexbox Playground",

      "mainAxis": "main axis",
      "crossAxis": "cross axis",

      "about": "About",
      "whatsThis": "What's this?",
      "whatsThisParagraph": "This is an interactive website that allows you to test out different CSS flexbox property.",
      "boxAbout": "The (main){mark--red} and (cross){mark--blue} axis are marked on the side of the box, and updates based on the flexbox properties applied.",
      "selection": "Selection",
      "selectionDescription": "Clicking on a box selects it as the active box, clicking again will cancel the selection.",
      "resize": "Resize",
      "resizeDescription": "You can adjust the size of a box by dragging on its lower right corner.",
      "pinning": "Pinning",
      "pinningDescription": "You can click on the pin button on the top left corner of the outer most box to pin it, fixing it's position while scrolling",
      "markup": "Markup",
      "markupDescription": "Shows the HTML and CSS markup for the active box",
      "showDesc": "Show Description",
      "axisTagDesc": "Property values related to the (main){mark--red} axis are marked in red and values related to the (cross){mark--blue} axis are marked in blue.",
      "flexContainerRules": "Flex Container Rules",
      "flexContainerRulesDesc": "Apply flex container CSS rules to the active box.",
      "display": "Display",
      "displayDesc" : "Setting (display){mark} to (flex){strong} or (inline-flex){strong} will make this box a (flex container){strong}, changing how it's children (now (flex items){strong}) are layed out. A (flex){strong} container is a block element and an (inline-flex){strong} container is an inline element",
      "orientation": "Orientation",
      "flexDirectionDesc": "Determines the (main){mark--red} axis of the container",
      "flexWrapDesc": "Determines whether the flex items overflow or wrap to a seperate line in the direction of the (cross){mark--blue} axis ((wrap-reverse){mark--blue} will also change the direction of the (cross){mark--blue} axis)",
      "flexFlowDesc": "A shorthand property that specifies (flex-direction){mark} and (flex-flow){mark}.",
      "alignment": "Alignment",
      "justifyContentDesc": "Align items by the (main){mark--red} axis",
      "alignItemsDesc": "Align (item in a line){strong} by the (cross){mark--blue} axis",
      "alignContentDesc": "Align (lines of items){strong} by the (cross){mark--blue} axis",
      "alignContentExample": "What's the difference? Try fiddling with (align-items){mark--blue} and (align-content){mark--blue} in (this example,alignContent){example}",

      "flexItemRules": "Flex Item Rules",
      "flexItemRulesDesc": "Apply flex item CSS rules to the active box.",
      "alignSelfDesc": "Align the flex item by (cross){mark--blue} axis, overriding (align-items){mark--blue} for the item",
      "orderDesc": "Changes the visual order of the flex item in the container (DOM order remains the same), flex item with greater order is layed out later",
      "flexibility": "Flexibility",
      "flexGrowDesc": "Sets the flex grow factor of a flex item. The item will grow by its share of remaining space in line. Items with higher grow factor gets more remaining space.",
      "flexShrinkDesc": "Sets the flex shrink factor of a flex item. The item will shrink to fit if the size of all items in line is larger than that of the flex container. Item with higher shrink factor shrinks more rapidly (until its size is (min-content){mark}).",
      "flexBasisDesc": "Sets the flex item's main size before growing or shrinking, unless (width){mark} or (height){mark} is already set.",
      "flexDesc": "A shorthand property that specifies (flex-grow){mark}, (flex-shrink){mark}, and (flex-basis){mark}.",

      "boxSettings": "Box Settings",
      "boxSettingsDesc": "Apply settings on the active box",
      "boxSize": "Box Size",
      "useSetWidth": "Use set width",
      "useSetHeight": "Use set height",
      "action": "Action",
      "addItem": "Add Item",
      "duplicate": "Duplicate",
      "delete": "Delete",
      "mockup": "Mockup",
      "type": "Type",
      "type_none": "None",
      "type_title": "Title",
      "type_paragraph": "Paragraph",
      "type_image": "Image",
      "settings": "Settings",
      "preset": "Preset"
    },
    "preset": {
      "default": "Default",
      "recursion": "Recursion"
    }
  },
  "zh_tw": {
    "code": "zh_tw",
    "bcp47": "zh-TW",
    "nativeName": "繁體中文",
    "loc": {
      "title": "Weird Flex: Flexbox 測試工具",

      "mainAxis": "主軸",
      "crossAxis": "切軸",

      "about": "關於",
      "whatsThis": "這是什麼？",
      "whatsThisParagraph": "這是一個能用來測試CSS Flexbox中各種不同屬性的工具。",
      "boxAbout": "在選取的元素旁會標上 (主軸){mark--red} 和 (切軸){mark--blue}，並且會依照現在附加的 Flexbox 屬性更新。",
      "selection": "選取",
      "selectionDescription": "點選左方的盒子元素可以將其選取為當前目標，再次點選將取消選取。",
      "resize": "調整大小",
      "resizeDescription": "拉動盒子元素的右下角可以調整大小。",
      "pinning": "釘選",
      "pinningDescription": "點下最外層盒子元素的左上角的釘選按鈕能將其固定於頁面左上角，讓它在滑動頁面時隨著頁面一起移動。",
      "markup": "代碼",
      "markupDescription": "顯示目標元素的HTML與CSS代碼",
      "showDesc": "顯示說明",
      "axisTagDesc": "與 (主軸){mark--red} 相關的屬性以紅色標記，與 (切軸){mark--blue} 相關的屬性以藍色標記",
      "flexContainerRules": "彈性容器屬性",
      "flexContainerRulesDesc": "對目標附加彈性容器屬性",
      "display": "元素級別",
      "displayDesc" : "將 (display){mark} 設定為 (flex){strong} 或 (inline-flex){strong} 將使該元素成為(彈性容器){strong}，影響其子元素 ((彈性項目){strong}) 的排列方式. 設定為 (flex){strong} 的元素為區塊級 (block-level) 的元素，而設定為 (inline-flex){strong} 的元素則為行內 (inline-level) 元素",
      "orientation": "方向",
      "flexDirectionDesc": "決定 (主軸){mark--red} 的方向",
      "flexWrapDesc": "決定彈性項目應該溢出或向 (切軸){mark--blue} 方向換行 ((wrap-reverse){mark--blue} 會更動 (切軸){mark--blue} 的方向)",
      "flexFlowDesc": "同時設定 (flex-direction){mark} 與 (flex-flow){mark} 的值",
      "alignment": "排列",
      "justifyContentDesc": "將彈性項目依 (主軸){mark--red} 進行排列",
      "alignItemsDesc": "將 (行內的彈性項目){strong} 依 (切軸){mark--blue} 進行排列",
      "alignContentDesc": "將 (行){strong} 依 (切軸){mark--blue} 進行排列",
      "alignContentExample": "差別在那裡呢？試試看在這個 (範例,alignContent){example} 中調整 (align-items){mark--blue} 和 (align-content){mark--blue} 吧！",

      "flexItemRules": "彈性項目屬性",
      "flexItemRulesDesc": "對目標附加彈性項目屬性",
      "alignSelfDesc": "將彈性項目依 (切軸){mark--blue} 進行排列，覆蓋 (align-items){mark--blue} 的值",
      "orderDesc": "更改彈性項目視覺上的排列順序 (DOM 順序不變)，值越高排列得越後面",
      "flexibility": "彈性",
      "flexGrowDesc": "設定彈性項目的放大係數。彈性項目會在該行仍有空間時放大分配到的空間。值越高，分配到的空間越多。",
      "flexShrinkDesc": "設定彈性項目的縮小係數。彈性項目會在該行項目長度總和超過容器長度時縮小。值越高，縮小的越多。(直到長度為 (min-content){mark}).",
      "flexBasisDesc": "設定彈性項目的縮放前的長度，會被(width){mark} 或 (height){mark} 覆蓋",
      "flexDesc": "同時設定 (flex-grow){mark}、(flex-shrink){mark}、(flex-basis){mark}.",

      "boxSettings": "元素設定",
      "boxSettingsDesc": "對目標元素進行其他設定",
      "boxSize": "大小",
      "useSetWidth": "使用固定寬度",
      "useSetHeight": "使用固定高度",
      "action": "動作",
      "addItem": "增加子元素",
      "duplicate": "複製",
      "delete": "刪除",
      "mockup": "樣板",
      "type": "類型",
      "type_none": "無",
      "type_title": "標題",
      "type_paragraph": "文章",
      "type_image": "圖片",
      "settings": "設定",
      "preset": "預設組合"
    },
    "preset": {
      "default": "預設",
      "recursion": "遞迴"
    }
  },
  "zh_cn": {
    "code": "zh_cn",
    "bcp47": "zh-CN",
    "nativeName": "简体中文",
    "loc": {
      "title": "Weird Flex: Flexbox 测试工具",

      "mainAxis": "主轴",
      "crossAxis": "切轴",

      "about": "关于",
      "whatsThis": "这是什麽？",
      "whatsThisParagraph": "这是一个能用来测试CSS Flexbox中各种不同属性的工具。",
      "boxAbout": "在选取的元素旁会标上 (主轴){mark--red} 和 (切轴){mark--blue}，并且会依照现在附加的 Flexbox 属性更新。",
      "selection": "选取",
      "selectionDescription": "点选左方的盒子元素可以将其选取为当前目标，再次点选将取消选取。",
      "resize": "调整大小",
      "resizeDescription": "拉动盒子元素的右下角可以调整大小。",
      "pinning": "钉选",
      "pinningDescription": "点下最外层盒子元素的左上角的钉选按钮能将其固定于页面左上角，让它在滑动页面时随着页面一起移动。",
      "markup": "代码",
      "markupDescription": "显示目标元素的HTML与CSS代码",
      "showDesc": "显示说明",
      "axisTagDesc": "与 (主轴){mark--red} 相关的属性以红色标记，与 (切轴){mark--blue} 相关的属性以蓝色标记",
      "flexContainerRules": "弹性容器属性",
      "flexContainerRulesDesc": "对目标附加弹性容器属性",
      "display": "元素级别",
      "displayDesc" : "将 (display){mark} 设定为 (flex){strong} 或 (inline-flex){strong} 将使该元素成为(弹性容器){strong}，影响其子元素 ((弹性项目){strong}) 的排列方式. 设定为 (flex){strong} 的元素为区块级 (block-level) 的元素，而设定为 (inline-flex){strong} 的元素则为行内 (inline-level) 元素",
      "orientation": "方向",
      "flexDirectionDesc": "决定 (主轴){mark--red} 的方向",
      "flexWrapDesc": "决定弹性项目应该溢出或向 (切轴){mark--blue} 方向换行 ((wrap-reverse){mark--blue} 会更动 (切轴){mark--blue} 的方向)",
      "flexFlowDesc": "同时设定 (flex-direction){mark} 与 (flex-flow){mark} 的值",
      "alignment": "排列",
      "justifyContentDesc": "将弹性项目依 (主轴){mark--red} 进行排列",
      "alignItemsDesc": "将 (行内的弹性项目){strong} 依 (切轴){mark--blue} 进行排列",
      "alignContentDesc": "将 (行){strong} 依 (切轴){mark--blue} 进行排列",
      "alignContentExample": "差别在那裡呢？试试看在这个 (范例,alignContent){example} 中调整 (align-items){mark--blue} 和 (align-content){mark--blue} 吧！",

      "flexItemRules": "弹性项目属性",
      "flexItemRulesDesc": "对目标附加弹性项目属性",
      "alignSelfDesc": "将弹性项目依 (切轴){mark--blue} 进行排列，复盖 (align-items){mark--blue} 的值",
      "orderDesc": "更改弹性项目视觉上的排列顺序 (DOM 顺序不变)，值越高排列得越后面",
      "flexibility": "弹性",
      "flexGrowDesc": "设定弹性项目的放大係数。弹性项目会在该行仍有空间时放大分配到的空间。值越高，分配到的空间越多。",
      "flexShrinkDesc": "设定弹性项目的缩小係数。弹性项目会在该行项目长度总和超过容器长度时缩小。值越高，缩小的越多。(直到长度为 (min-content){mark}).",
      "flexBasisDesc": "设定弹性项目的缩放前的长度，会被(width){mark} 或 (height){mark} 复盖",
      "flexDesc": "同时设定 (flex-grow){mark}、(flex-shrink){mark}、(flex-basis){mark}.",

      "boxSettings": "元素设定",
      "boxSettingsDesc": "对目标元素进行其他设定",
      "boxSize": "大小",
      "useSetWidth": "使用固定宽度",
      "useSetHeight": "使用固定高度",
      "action": "动作",
      "addItem": "增加子元素",
      "duplicate": "複製",
      "delete": "删除",
      "mockup": "样板",
      "type": "类型",
      "type_none": "无",
      "type_title": "标题",
      "type_paragraph": "文章",
      "type_image": "图片",
      "settings": "设定",
      "preset": "预设组合"
    },
    "preset": {
      "default": "预设",
      "recursion": "递迴"
    }
  }
}